/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.mb.view.forms;

import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mb.controller.ProductDAO;
import org.mb.model.Product;
import org.mb.model.PurchasedItem;

/**
 *
 * @author QWERTY
 */
public class PurchaseItemForm extends javax.swing.JDialog {

    DefaultTableModel search_model;
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    NumberFormat nf = NumberFormat.getInstance();

    PurchaseForm pf;
    PurchasedItem pob;

    public void setPurchaseForm(PurchaseForm pf) {
        this.pf = pf;
    }

    public void setPurchasedItem(PurchasedItem pob) {
        this.pob = pob;
        jTextField_ProductID.setText(pob.getProduct_id() + "");
        jTextField_Name.setText(pob.getProduct());
        jTextField_Quantity.setText(pob.getQuantity() + "");
        jTextField_Price.setText(pob.getPurchase_price() + "");
        jDateChooser_MFG.setDate(pob.getMfg_date());
        jDateChooser_EXP.setDate(pob.getExp_date());
        jButton_Search.setVisible(false);
        jButton_AddProduct.setText("Edit");
    }

    /**
     * Creates new form PurchaseItemForm
     */
    public PurchaseItemForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        nf.setMaximumFractionDigits(2);
        search_model = new DefaultTableModel(null, new String[]{"ID", "Product", "Available Qty"});
        jTable_Search.setModel(search_model);
    }

    public void clearSearchModel() {
        int c = search_model.getRowCount();
        for (int i = 0; i < c; i++) {
            search_model.removeRow(0);
        }
    }

    public void clearFields() {
        jTextField_ProductID.setText("");
        jTextField_Name.setText("");
        jTextField_Quantity.setText("");
        jTextField_Price.setText("");
        jDateChooser_MFG.setDate(null);
        jDateChooser_EXP.setDate(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField_Search = new javax.swing.JTextField();
        jButton_Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Search = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_ProductID = new javax.swing.JTextField();
        jTextField_Name = new javax.swing.JTextField();
        jTextField_Quantity = new javax.swing.JTextField();
        jTextField_Price = new javax.swing.JTextField();
        jDateChooser_MFG = new com.toedter.calendar.JDateChooser();
        jDateChooser_EXP = new com.toedter.calendar.JDateChooser();
        jLabel_NameError = new javax.swing.JLabel();
        jLabel_QuantityError = new javax.swing.JLabel();
        jLabel_PriceError = new javax.swing.JLabel();
        jLabel_MFGError = new javax.swing.JLabel();
        jLabel1_EXPError = new javax.swing.JLabel();
        jButton_AddProduct = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Purchase Item");

        jTextField_Search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton_Search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Search.setText("Search");
        jButton_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SearchActionPerformed(evt);
            }
        });

        jTable_Search.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_Search.getTableHeader().setReorderingAllowed(false);
        jTable_Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SearchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Search);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Product ID :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Name :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Quantity :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Purchase Price :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("MFG Date :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("EXP Date :");

        jTextField_ProductID.setEditable(false);
        jTextField_ProductID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextField_Name.setEditable(false);
        jTextField_Name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextField_Quantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_Quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_QuantityKeyTyped(evt);
            }
        });

        jTextField_Price.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_Price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_PriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PriceKeyTyped(evt);
            }
        });

        jDateChooser_MFG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jDateChooser_EXP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_NameError.setForeground(java.awt.Color.red);
        jLabel_NameError.setText(" ");

        jLabel_QuantityError.setForeground(java.awt.Color.red);
        jLabel_QuantityError.setText(" ");

        jLabel_PriceError.setForeground(java.awt.Color.red);
        jLabel_PriceError.setText(" ");

        jLabel_MFGError.setForeground(java.awt.Color.red);
        jLabel_MFGError.setText(" ");

        jLabel1_EXPError.setForeground(java.awt.Color.red);
        jLabel1_EXPError.setText(" ");

        jButton_AddProduct.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_AddProduct.setText("Add Product");
        jButton_AddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField_Search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_Search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jTextField_ProductID)
                            .addComponent(jTextField_Name)
                            .addComponent(jLabel_NameError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_QuantityError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_PriceError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser_MFG, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(jTextField_Price)
                            .addComponent(jDateChooser_EXP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_MFGError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1_EXPError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_AddProduct)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Search))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField_ProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_NameError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_QuantityError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jTextField_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_PriceError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jDateChooser_MFG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_MFGError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jDateChooser_EXP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1_EXPError)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_AddProduct)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SearchActionPerformed

        String search_key = jTextField_Search.getText();
        if (search_key.equals("")) {
            clearSearchModel();
            return;
        }

        ProductDAO pDAO = new ProductDAO();
        ArrayList<Product> pList = pDAO.searchProducts(search_key);
        clearSearchModel();
        for (int i = 0; i < pList.size(); i++) {
            search_model.addRow(new Object[]{pList.get(i).getProduct_id(),
                pList.get(i).getName(), pList.get(i).getQuantity()});
        }
    }//GEN-LAST:event_jButton_SearchActionPerformed

    private void jTable_SearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SearchMouseClicked
        clearFields();

        int row = jTable_Search.getSelectedRow();
        
        jTextField_ProductID.setText(jTable_Search.getValueAt(row, 0).toString());
        jTextField_Name.setText(jTable_Search.getValueAt(row, 1).toString());
    }//GEN-LAST:event_jTable_SearchMouseClicked

    private void jButton_AddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddProductActionPerformed
        if (jTextField_ProductID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, " Please select a product" + " first ");
            return;
        }
        if (jTextField_Quantity.getText().equals("")
                || jTextField_Price.getText().equals("")
                || jDateChooser_MFG.getDate() == null
                || jDateChooser_EXP.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields first");
            return;
        }
        if(jDateChooser_MFG.getDate().compareTo(new Date())>0){
            JOptionPane.showMessageDialog(null, "MFG date cant be after current date");
            return;
        }
        if(jDateChooser_EXP.getDate().compareTo(new Date())<0){
            JOptionPane.showMessageDialog(null, "Expiry date cant be before current date");
            return;
        }
        if(jDateChooser_EXP.getDate().compareTo(jDateChooser_MFG.getDate())<0){
            JOptionPane.showMessageDialog(null, "Expiry date cant be before MFG date");
            return;
        }

        int product_id = Integer.parseInt(jTextField_ProductID.getText());
        String name = jTextField_Name.getText();
        int quantity = Integer.parseInt(jTextField_Quantity.getText());
        double purchase_price = Double.parseDouble(jTextField_Price.getText());
        Date mfg_date = jDateChooser_MFG.getDate();
        Date exp_date = jDateChooser_EXP.getDate();

        int i = pf.checkProduct(product_id);
        if (i == -1) {
            pf.purchase_model.addRow(new Object[]{product_id, name, quantity,
                df.format(mfg_date), df.format(exp_date), purchase_price, nf.format(quantity * purchase_price)});
        } else {
            if (pob == null) {
                int confirm = JOptionPane.showConfirmDialog(null, "The product is already added \n Do you want to update it?");
                if (confirm != 0) {
                    return;
                }
            }
            pf.purchase_model.setValueAt(quantity, i, 2);
            pf.purchase_model.setValueAt(df.format(mfg_date), i, 3);
            pf.purchase_model.setValueAt(df.format(exp_date), i, 4);
            pf.purchase_model.setValueAt(purchase_price, i, 5);
            pf.purchase_model.setValueAt(nf.format(quantity * purchase_price), i, 6);
        }
        pf.totalPrice();
        dispose();

    }//GEN-LAST:event_jButton_AddProductActionPerformed

    private void jTextField_QuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_QuantityKeyTyped
        char c = evt.getKeyChar();
        if (!(c >= '0' && c <= '9')) {
            evt.consume();
        }
        if (jTextField_Quantity.getText().equals("")) {
            jLabel_QuantityError.setText("Quantity cant be empty");
        } else {
            jLabel_QuantityError.setText(" ");
        }
    }//GEN-LAST:event_jTextField_QuantityKeyTyped

    private void jTextField_PriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PriceKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c) && !evt.isAltDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PriceKeyTyped

    private void jTextField_PriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PriceKeyReleased
        try {
            double x = Double.parseDouble(jTextField_Price.getText());
            jLabel_PriceError.setText(" ");
        } catch (Exception ex) {
            if (jTextField_Price.getText().equals("")) {
                jLabel_PriceError.setText("Price cant be empty");
            } else {
                jLabel_PriceError.setText("Invalid Price");
            }
        }
    }//GEN-LAST:event_jTextField_PriceKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseItemForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseItemForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseItemForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseItemForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PurchaseItemForm dialog = new PurchaseItemForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AddProduct;
    private javax.swing.JButton jButton_Search;
    private com.toedter.calendar.JDateChooser jDateChooser_EXP;
    private com.toedter.calendar.JDateChooser jDateChooser_MFG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1_EXPError;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_MFGError;
    private javax.swing.JLabel jLabel_NameError;
    private javax.swing.JLabel jLabel_PriceError;
    private javax.swing.JLabel jLabel_QuantityError;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Search;
    private javax.swing.JTextField jTextField_Name;
    private javax.swing.JTextField jTextField_Price;
    private javax.swing.JTextField jTextField_ProductID;
    private javax.swing.JTextField jTextField_Quantity;
    private javax.swing.JTextField jTextField_Search;
    // End of variables declaration//GEN-END:variables
}
